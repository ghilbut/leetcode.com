#-*- coding:utf-8 -*-

import os
import sys

from subprocess import call

BASEPATH = Dir('.').abspath



################################################################
##  set environment and get build options
################################################################

cpppath = [
  'googletest/googletest/include',
  'googletest/googletest',
]

env = Environment(CPPPATH=cpppath, CXXFLAGS='-std=c++11')
is_clean = env.GetOption('clean')

# don't clone or update from git repository when clean
if not is_clean:
  gitpath = os.path.join(BASEPATH, 'googletest')
  if os.path.exists(gitpath):
    os.chdir(gitpath)
    call(['git', 'pull'])
    os.chdir(BASEPATH)
  else:
    url = 'https://github.com/google/googletest.git'
    call(['git', 'clone', url])


################################################################
##  build static library
################################################################

sources = [
    'googletest/googletest/src/gtest-all.cc',
    'googletest/googletest/src/gtest_main.cc',
  ]

# build static library
lib = env.StaticLibrary(target='gtest', source=sources)
#env.Install('./', ['googletest/googletest/src/gtest_main.cc',])
#env.Alias('install', './')
#Default('install')
